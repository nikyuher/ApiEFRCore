// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teatro.Data;

#nullable disable

namespace Teatro.Data.Migrations
{
    [DbContext(typeof(TeatroContext))]
    [Migration("20240221191515_eliminandoCosasObsoletas")]
    partial class eliminandoCosasObsoletas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Teatro.Models.Asiento", b =>
                {
                    b.Property<int>("AsientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsientoId"), 1L, 1);

                    b.Property<int?>("DetalleReservaObraId")
                        .HasColumnType("int");

                    b.Property<int?>("DetalleReservaReservaId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NumeroAsiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroFila")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AsientoId");

                    b.HasIndex("DetalleReservaReservaId", "DetalleReservaObraId");

                    b.ToTable("Asientos");
                });

            modelBuilder.Entity("Teatro.Models.DetalleReserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.HasKey("ReservaId", "ObraId");

                    b.HasIndex("ObraId");

                    b.ToTable("DetalleReservas");
                });

            modelBuilder.Entity("Teatro.Models.Obra", b =>
                {
                    b.Property<int>("ObraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObraId"), 1L, 1);

                    b.Property<string>("Descripción")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioEntrada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Título")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObraId");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("Teatro.Models.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"), 1L, 1);

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ReservaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Teatro.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Teatro.Models.Asiento", b =>
                {
                    b.HasOne("Teatro.Models.DetalleReserva", null)
                        .WithMany("Asientos")
                        .HasForeignKey("DetalleReservaReservaId", "DetalleReservaObraId");
                });

            modelBuilder.Entity("Teatro.Models.DetalleReserva", b =>
                {
                    b.HasOne("Teatro.Models.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teatro.Models.Reserva", "Reserva")
                        .WithMany("Detalles")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obra");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Teatro.Models.Reserva", b =>
                {
                    b.HasOne("Teatro.Models.Usuario", "Usuario")
                        .WithMany("ListReservas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Teatro.Models.DetalleReserva", b =>
                {
                    b.Navigation("Asientos");
                });

            modelBuilder.Entity("Teatro.Models.Reserva", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("Teatro.Models.Usuario", b =>
                {
                    b.Navigation("ListReservas");
                });
#pragma warning restore 612, 618
        }
    }
}
